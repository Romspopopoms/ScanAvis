(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[611],{9211:function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){(window.__NEXT_P=window.__NEXT_P||[]).push(["/paiement",function(){return __webpack_require__(417)}])},8655:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5893);__webpack_require__(7294);let Spinner=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"spinner-container",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"spinner"})});__webpack_exports__.Z=Spinner},417:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return paiement}});var jsx_runtime=__webpack_require__(5893),react=__webpack_require__(7294),stripe_esm=__webpack_require__(1291),react_stripe_umd=__webpack_require__(6664),CartContext=__webpack_require__(4426),AuthContext=__webpack_require__(4642);let stripePromise=(0,stripe_esm.J)("pk_test_51OPtGvDWmnYPaxs1gSpLL1WpDyU6gaxOBszqNCSu9iHVeEYuPcjUEvOpKzjwdbF6NUWquoEPf24Y3qMwIDLmeLvl00FwQkUSKx"),cardElementOptions={style:{base:{fontSize:"16px",color:"#424770","::placeholder":{color:"#aab7c4"}},invalid:{color:"#9e2146"}}},CheckoutFormContent=()=>{let stripe=(0,react_stripe_umd.useStripe)(),elements=(0,react_stripe_umd.useElements)(),{cartItems,formatCartItemsForSubscription,clearCart}=(0,CartContext.jD)(),{user}=(0,react.useContext)(AuthContext.Vo),[clientSecret,setClientSecret]=(0,react.useState)(""),[isProcessing,setIsProcessing]=(0,react.useState)(!1),[errorMessage,setErrorMessage]=(0,react.useState)("");(0,react.useEffect)(()=>{let fetchSubscriptionIntent=async()=>{if(0===cartItems.length||!user)return;let formattedCartItems=formatCartItemsForSubscription();console.log("Formatted Items for Subscription:",formattedCartItems);try{let response=await fetch("/.netlify/functions/SubscriptionIntent",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({items:formattedCartItems,userUuid:user.uuid})}),data=await response.json();if(!response.ok)throw Error(data.error||"Erreur du serveur");setClientSecret(data.clientSecret)}catch(error){console.error("Erreur lors de la cr\xe9ation de l’intention de souscription:",error),setErrorMessage(error.message)}};fetchSubscriptionIntent()},[cartItems,formatCartItemsForSubscription,user]);let onSuccessfulSubscription=subscriptionId=>{console.log("Subscription succeeded with ID: ".concat(subscriptionId)),clearCart()},onFailedSubscription=message=>{console.error("Subscription failed with message: ".concat(message))},handleSubmit=async event=>{if(event.preventDefault(),!stripe||!elements){setErrorMessage("Stripe.js n’a pas encore \xe9t\xe9 charg\xe9!");return}setIsProcessing(!0),setErrorMessage("");try{let cardNumberElement=elements.getElement(react_stripe_umd.CardNumberElement),cardExpiryElement=elements.getElement(react_stripe_umd.CardExpiryElement),cardCvcElement=elements.getElement(react_stripe_umd.CardCvcElement);if(!cardNumberElement||!cardExpiryElement||!cardCvcElement)throw Error("\xc9l\xe9ment de carte non trouv\xe9");let formattedCartItems=formatCartItemsForSubscription(),{error,setupIntent}=await stripe.confirmCardSetup(clientSecret,{payment_method:{card:cardNumberElement,billing_details:{name:user?user.name:"Guest User"}}});if(error)throw error;if("succeeded"===setupIntent.status){let subscriptionResult=await fetch("/.netlify/functions/complete-subscription",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({setupIntentId:setupIntent.id,userUuid:user?user.uuid:null,items:formattedCartItems})}),subscriptionData=await subscriptionResult.json();if(!subscriptionResult.ok)throw Error(subscriptionData.error||"Erreur lors de la cr\xe9ation de l’abonnement");onSuccessfulSubscription(subscriptionData.subscriptionId)}else throw Error("La configuration a \xe9chou\xe9 pour une raison inconnue.")}catch(error1){console.error("Erreur lors du traitement de l’abonnement:",error1),setErrorMessage(error1.message||"Erreur lors du traitement de l’abonnement"),onFailedSubscription(error1.message)}finally{setIsProcessing(!1)}};return(0,jsx_runtime.jsx)("div",{className:"min-h-screen flex justify-center items-center",children:(0,jsx_runtime.jsxs)("div",{className:"bg-white p-8 rounded-lg shadow-xl max-w-md w-full",children:[(0,jsx_runtime.jsx)("h2",{className:"text-2xl font-semibold mb-6",children:"D\xe9tails de l'abonnement"}),(0,jsx_runtime.jsx)("ul",{className:"mb-6",children:cartItems.map(item=>(0,jsx_runtime.jsxs)("li",{className:"flex justify-between text-lg mb-2",children:[(0,jsx_runtime.jsxs)("span",{children:[item.name," - Quantit\xe9: ",item.quantity]}),(0,jsx_runtime.jsxs)("span",{children:["$",(item.price/100).toFixed(2)]})]},item.id))}),(0,jsx_runtime.jsxs)("p",{className:"text-lg font-semibold mb-6",children:["Total \xe0 payer: $",(cartItems.reduce((total,item)=>total+item.price*item.quantity,0)/100).toFixed(2)]}),(0,jsx_runtime.jsxs)("form",{onSubmit:handleSubmit,className:"space-y-4",children:[errorMessage&&(0,jsx_runtime.jsx)("div",{className:"error-message",children:errorMessage}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Num\xe9ro de la carte"}),(0,jsx_runtime.jsx)(react_stripe_umd.CardNumberElement,{className:"stripe-element p-2 border border-gray-300 rounded mt-1",options:cardElementOptions})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Date d'expiration"}),(0,jsx_runtime.jsx)(react_stripe_umd.CardExpiryElement,{className:"stripe-element p-2 border border-gray-300 rounded mt-1",options:cardElementOptions})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"CVC"}),(0,jsx_runtime.jsx)(react_stripe_umd.CardCvcElement,{className:"stripe-element p-2 border border-gray-300 rounded mt-1",options:cardElementOptions})]}),(0,jsx_runtime.jsx)("button",{type:"submit",disabled:!stripe||!clientSecret||isProcessing,className:"w-full text-white font-bold py-2 px-4 rounded ".concat(!stripe||isProcessing?"bg-gray-400":"bg-blue-600 hover:bg-blue-700"),children:isProcessing?"Traitement...":"S’abonner"})]})]})})},CheckoutForm=()=>(0,jsx_runtime.jsx)(react_stripe_umd.Elements,{stripe:stripePromise,children:(0,jsx_runtime.jsx)(CheckoutFormContent,{})});var Spinner=__webpack_require__(8655);let paiement_stripePromise=(0,stripe_esm.J)("pk_test_51OPtGvDWmnYPaxs1gSpLL1WpDyU6gaxOBszqNCSu9iHVeEYuPcjUEvOpKzjwdbF6NUWquoEPf24Y3qMwIDLmeLvl00FwQkUSKx"),PagePaiement=()=>{let[loading,setLoading]=(0,react.useState)(!0);return((0,react.useEffect)(()=>{paiement_stripePromise.then(()=>{setLoading(!1)}).catch(error=>{console.error("Erreur lors du chargement de Stripe:",error),setLoading(!1)})},[]),loading)?(0,jsx_runtime.jsx)(Spinner.Z,{}):(0,jsx_runtime.jsx)("div",{className:"relative z-10 min-h-screen",children:(0,jsx_runtime.jsx)(react_stripe_umd.Elements,{stripe:paiement_stripePromise,children:(0,jsx_runtime.jsx)("div",{className:"page-container",children:(0,jsx_runtime.jsx)(CheckoutForm,{})})})})};var paiement=PagePaiement}},function(__webpack_require__){__webpack_require__.O(0,[101,774,888,179],function(){return __webpack_require__(__webpack_require__.s=9211)}),_N_E=__webpack_require__.O()}]);